import asyncio
import re

from aiogram.filters import Command, CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.filters import StateFilter
from aiogram import Bot

from config import TOKEN, chat_id, admins
from keyboards import keyboard_1 as kb
from database import models_db as db

admin_router = Router()
admins = admins
chat_id = chat_id

bot = Bot(TOKEN)

async def who_admin(message: Message) -> bool:
    tg_id = message.from_user.id
    return tg_id in admins

async def create_new_topic_unban(ticket_id: int, steam_id: str, problem: str, admin_ban_id: str, status: str):
    '''–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–º—ã(—Ç–æ–ø–∏–∫–∞)'''

    user_tg_id = await db.get_user_tg_id_by_ticket(ticket_id)
    user = await bot.get_chat(user_tg_id)

    try:
        topic_name = f"–û–±–∂–∞–ª–æ–≤–∞–Ω–∏—è #{ticket_id}"
        topic = await bot.create_forum_topic(chat_id=chat_id, name=topic_name)

        if topic and topic.message_thread_id:
            message_thread_id = topic.message_thread_id
            await bot.send_message(
                chat_id=chat_id,
                message_thread_id=message_thread_id,
                text=(
                    f"üìù –¢–∏–∫–µ—Ç #{ticket_id}\n\n"
                    f"üë§ Steam ID: {steam_id}\n"
                    f"‚ùì –ü—Ä–æ–±–ª–µ–º–∞: {problem}\n"
                    f"üëÆ –ó–∞–±–∞–Ω–∏–ª –∞–¥–º–∏–Ω: {admin_ban_id}\n"
                    f"üìÇ –°—Ç–∞—Ç—É—Å: {status}\n"
                    f"üë§–¢–µ–ª–µ–≥—Ä–∞–º –∏–≥—Ä–æ–∫–∞: @{user.username}"
                ), reply_markup=kb.add_comment_and_chat
            )
            await db.save_topic_to_db(ticket_id, message_thread_id)

        else:
            await bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ–º—É')

    except Exception as e:
        print(e)


async def create_new_topic_feedback(ticket_id: int, steam_id: str, nickname: str, problem: str, status: str):
    '''–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–º—ã(—Ç–æ–ø–∏–∫–∞)'''

    try:
        topic_name = f"–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å #{ticket_id}"
        topic = await bot.create_forum_topic(chat_id=chat_id, name=topic_name)

        if topic and topic.message_thread_id:
            message_thread_id = topic.message_thread_id
            await bot.send_message(
                chat_id=chat_id,
                message_thread_id=message_thread_id,
                text=(
                    f"üìù –¢–∏–∫–µ—Ç #{ticket_id}\n\n"
                    f"üë§ Steam ID: {steam_id}\n"
                    f"üéÆ –ù–∏–∫–Ω–µ–π–º: {nickname}\n"
                    f"‚ùì –ü—Ä–æ–±–ª–µ–º–∞: {problem}\n"
                    f"üìÇ –°—Ç–∞—Ç—É—Å: {status}"
                ),
                reply_markup=kb.add_comment_and_chat
            )
            await db.save_topic_to_db(ticket_id, message_thread_id)

        else:
            await bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ–º—É')

    except Exception as e:
        print(e)


'''–í—Å–µ —á—Ç–æ –Ω–∏–∂–µ –∞–¥–º–∏–Ω –º–µ–Ω—é.'''


@admin_router.message(Command('admin_panel'))
async def admin_panel(message: Message):
    if not await who_admin(message):
        await message.answer("‚ùóÔ∏è–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.‚ùóÔ∏è")

    else:
        await bot.send_message(message.from_user.id, '–í—ã –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å', reply_markup=kb.admin_menu)


@admin_router.message(F.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ –∑–∞ 7–¥')
async def admin_panel(message: Message):
    if not await who_admin(message):
        await message.answer("‚ùóÔ∏è–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.‚ùóÔ∏è")

    else:
        await bot.send_message(message.from_user.id, '–í—Å–µ –∞–¥–º–∏–Ω—ã –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–∫—Ä—ã–≤–∞–ª–∏ —Ç–∏–∫–µ—Ç—ã –∑–∞ 7–¥')
        await db.get_logs_for_last_week(message)


@admin_router.message(F.text == '–û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏ –∑–∞ 7–¥')
async def admin_panel(message: Message):
    if not await who_admin(message):
        await message.answer("‚ùóÔ∏è–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.‚ùóÔ∏è")
    else:
        await db.clear_logs_for_last_week(message)


@admin_router.message(F.text == '–í—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
async def admin_exit(message: Message):
    await message.answer('–í—ã –≤—ã—à–ª–∏ —Å –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏.', reply_markup=kb.main)